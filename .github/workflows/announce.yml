on:
  push:

jobs:
  define-matrix:
    name: Define allowed cities
    runs-on: ubuntu-latest

    outputs:
      cities: ${{ steps.extractor.outputs.cities }}

    steps:
      - name: Checkout config
        uses: actions/checkout@v4
      - name: Extract cities
        id: extractor
        run: |
          echo "cities=$(jq -cS --arg WEEKDAY "$(date -d '+2day' +%A)" '
                  [.defaults as $defaults | .cities[] | ($defaults + .)]
                  | [.[] | select(.weekday | contains($WEEKDAY))]
                ' config.json)" \
          >> $GITHUB_OUTPUT

  announce-hangout:
    name: "Announce hangout at ${{ matrix.city.name }}"
    if: ${{ needs.define-matrix.outputs.cities != '[]' }}
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        city: ${{ fromJSON(needs.define-matrix.outputs.cities) }}

    env:
      CHAT_ID: ${{ secrets[format('{0}_CHAT_ID', matrix.city.name)] }}

    steps:
      - name: Announce Hangout
        env:
          MESSAGE: ${{ format(matrix.city.message, matrix.city.time, secrets[format('{0}_AREA', matrix.city.name)], secrets[format('{0}_ADDITIONAL', matrix.city.name)]) }}
        run: |
          RESPONSE=$(curl -s -X POST \
            -H 'Content-Type: application/json' \
            -d '{
              "chat_id": ${{ env.CHAT_ID }},
              "text": "${{ env.MESSAGE }}",
              "parse_mode": "MarkdownV2",
              "protect_content": true,
              "disable_notification": true,
              "link_preview_options": {"is_disabled": true}
            }' \
            https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage)
          if [ $(echo $RESPONSE | jq .ok) != "true" ]; then
            echo "Error: $(echo $RESPONSE | jq .description)"
            exit 1
          fi
          echo "MESSAGE_ID=$(echo $RESPONSE | jq .result.message_id)" >> $GITHUB_ENV
      - name: Pin announce message
        if: ${{ env.MESSAGE_ID }}
        run: |
          RESPONSE$(curl -s -X POST \
            -H 'Content-Type: application/json' \
            -d '{
              "chat_id": ${{ env.CHAT_ID }},
              "message_id": ${{ env.MESSAGE_ID }},
              "disable_notification": true
            }' \
            https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/pinChatMessage)
          if [ $(echo $RESPONSE | jq .ok) != "true" ]; then
            echo "Error: $(echo $RESPONSE | jq .description)"
            exit 1
          fi
      - name: Presence poll
        run: |
          RESPONSE=$(curl -s -X POST \
            -H 'Content-Type: application/json' \
            -d '{
              "chat_id": ${{ env.CHAT_ID }},
              "question": "Придёшь на встречу?",
              "options": [
                {"text": "Да"},
                {"text": "Возможно"},
                {"text": "Нет"}
              ],
              "is_anonymous": false,
              "is_closed": true
            }' \
            https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendPoll)
          if [ $(echo $RESPONSE | jq .ok) != "true" ]; then
            echo "Error: $(echo $RESPONSE | jq .description)"
            exit 1
          fi
