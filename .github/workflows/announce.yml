on:
  push:

jobs:
  define-matrix:
    name: Define allowed cities
    runs-on: ubuntu-latest

    outputs:
      cities: ${{ steps.extractor.outputs.cities }}

    steps:
      - name: Checkout config
        uses: actions/checkout@v4
      - name: Extract cities
        id: extractor
        run: |
          echo "cities=$(jq -cS '[.defaults as $defaults | .cities[] | ($defaults + .)]' config.json)" >> "$GITHUB_OUTPUT"

  announce-hangout:
    name: "Announce hangout at ${{ matrix.city.name }}"
    runs-on: ubuntu-latest
    needs: define-matrix
    strategy:
      matrix:
        city: ${{ fromJSON(needs.define-matrix.outputs.cities) }}

    steps:
      - name: Announce Hangout
        env:
          CHAT_ID: ${{ secrets[format('{0}_CHAT_ID', matrix.city.name)] }}
          TZ: ${{ matrix.city.timezone }}
          MESSAGE: ${{ format(matrix.city.message, matrix.city.time, secrets[format('{0}_AREA_NAME', matrix.city.name)], secrets[format('{0}_AREA_LINK', matrix.city.name)], secrets[format('{0}_MODERATOR', matrix.city.name)], secrets[format('{0}_ADDITIONAL', matrix.city.name)]) }}
        run: |
          MESSAGE_ID=$(curl -s -X POST \
            -H 'Content-Type: application/json' \
            -d '{
              "chat_id": ${{ env.CHAT_ID }},
              "text": "${{ env.MESSAGE }}",
              "parse_mode": "MarkdownV2",
              "protect_content": true,
              "disable_notification": true,
              "link_preview_options": {"is_disabled": true}
            }' \
            https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/sendMessage | jq .result.message_id)
          curl -s -X POST \
            -H 'Content-Type: application/json' \
            -d '{
              "chat_id": ${{ env.CHAT_ID }},
              "message_id": ${MESSAGE_ID},
              "disable_notification": true
            }' \
          https://api.telegram.org/bot${{ secrets.TELEGRAM_BOT_TOKEN }}/pinChatMessage > /dev/null
